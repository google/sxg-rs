# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Unit tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  Rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - working-directory: credentials
        run: |
          openssl ecparam -out privkey.pem -name prime256v1 -genkey
          openssl req -new -sha256 -key privkey.pem -out cert.csr \
            -subj '/CN=example.org/O=Test/C=US'
          openssl x509 -req -days 90 -in cert.csr -signkey privkey.pem -out cert.pem \
            -extfile <(echo -e "1.3.6.1.4.1.11129.2.1.22 = ASN1:NULL\nsubjectAltName=DNS:example.org")
          cp cert.pem issuer.pem
          openssl x509 -pubkey -noout -in cert.pem |\
            openssl pkey -pubin -outform der |\
            openssl dgst -sha256 -binary |\
            base64 >cert_sha256.txt
      - run: |
          cp cloudflare_worker/wrangler.example.toml cloudflare_worker/wrangler.toml
          cp fastly_compute/fastly.example.toml fastly_compute/fastly.toml
          cp fastly_compute/config.example.yaml fastly_compute/config.yaml
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
  TypeScript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - working-directory: cloudflare_worker/worker
        run: |
          npm install
          npm run build
          npm run test

